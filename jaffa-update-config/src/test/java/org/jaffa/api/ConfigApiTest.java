/**
 * Product RESTful Implementation Toolkit
 * The Product RESTful Implementation Toolkit is a REST service providing CRUD endpoints to  manipulate configuration properties within GOLDesp.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: mwayles@tapestrysolutions.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package org.jaffa.api;

import org.junit.Test;
import org.junit.Before;

import org.apache.cxf.jaxrs.client.JAXRSClientFactory;
import org.apache.cxf.jaxrs.client.ClientConfiguration;
import org.apache.cxf.jaxrs.client.WebClient;


import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;

import java.util.ArrayList;
import java.util.List;


/**
 * API tests for IConfigApi
 */
public class ConfigApiTest {


    private IConfigApi api;
    
    @Before
    public void setup() {
    }

    
    /**
     * Deletes a zip file and rolls back its configurations
     *
     * Removes configurations contained within a ZIP file and deletes the file entirely.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteConfigZipFileTest() {
        //POST random configs
        //DELETE random configs
        //ASSERT configs aren't there
        //ASSERT ZipFile is deleted from repository's JSON response
    }
    
    /**
     * Retrieve a specific configuration ZIP file
     *
     * Retrieve and download a specific configuration ZIP file from the $DATA_DIRECTORY location.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getConfigZipFileTest() {
        //GET zip file
        //ASSERT file downloaded
        
        
    }
    
    /**
     * Retrieve the list of ZIP files that contain configurations within a directory
     *
     * This service endpoint scans the filesystem at the $DATA_DIRECTORY location and provides a list of all ZIP files contained within that location. These KIP files will store configuration XML files that will load and overwrite configuration properties depending on Context and Variation salience.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getConfigZipFileListTest() {
        //GET zip file list from data.directory
        //ASSERT that the list contains the expected items
        
        
    }
    
    /**
     * Upload a new configuration ZIP file.
     *
     * Creates a ZIP file of configurations and populates GOLDesp repositories with the new values (depending on salience).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putConfigZipFileTest() {
        //POST a configuration file to a repository
        //ASSERT that the configurations are included in repository's JSON response
        
        
    }
    
}
